{"version":3,"sources":["../../../server/app/controllers/partyController.js"],"names":["PartyController","req","res","body","name","status","send","error","hqAddress","logoUrl","party","id","parties","length","push","data","dataArray","forEach","parseInt","params","message","partyController"],"mappings":"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","file":"partyController.js","sourcesContent":["/* eslint-disable no-param-reassign */\n/* eslint-disable class-methods-use-this */\nimport parties from '../model/parties';\n\nclass PartyController {\n  addParty(req, res) {\n    if (!req.body.name) {\n      res.status(400).send({\n        status: 400,\n        error: 'Party name is required',\n      });\n    } else if (!req.body.hqAddress) {\n      res.status(400).send({\n        status: 400,\n        error: 'HQ address is required',\n      });\n    } else if (!req.body.logoUrl) {\n      res.status(400).send({\n        status: 400,\n        error: 'Logo Url is required',\n      });\n    } else {\n      const party = {\n        id: parties.length + 1,\n        name: req.body.name,\n        hqAddress: req.body.hqAddress,\n        logoUrl: req.body.logoUrl,\n      };\n      parties.push(party);\n\n      res.status(201).send({\n        status: 201,\n        data: [{\n          id: party.id,\n          name: party.name,\n        }],\n      });\n    }\n  }\n\n  getAllParties(req, res) {\n    const dataArray = [];\n    parties.forEach((party) => {\n      const data = {\n        id: party.id,\n        name: party.name,\n        logoUrl: party.logoUrl,\n      };\n      dataArray.push(data);\n    });\n\n    res.status(200).send({\n      status: 200,\n      data: dataArray,\n    });\n  }\n\n  getOneParty(req, res) {\n    const id = parseInt(req.params.id, 10);\n    parties.forEach((party) => {\n      if (party.id === id) {\n        res.status(200).send({\n          status: 200,\n          data: [{\n            id: party.id,\n            name: party.name,\n            logoUrl: party.logoUrl,\n          }],\n        });\n      }\n    });\n    res.status(404).send({\n      status: 404,\n      error: 'Party does not exist',\n    });\n  }\n\n  editParty(req, res) {\n    const id = parseInt(req.params.id, 10);\n    const { name } = req.body;\n\n    parties.forEach((party) => {\n      if (party.id === id) {\n        if (name) {\n          res.status(200).send({\n            status: 200,\n            data: [{\n              id: party.id,\n              name,\n            }],\n          });\n        } else {\n          res.status(400).send({\n            status: 400,\n            error: 'Party name is required',\n          });\n        }\n      }\n    });\n\n    res.status(404).send({\n      status: 404,\n      error: 'Party does not exist',\n    });\n  }\n\n  deleteParty(req, res) {\n    const id = parseInt(req.params.id, 10);\n    parties.forEach((party) => {\n      if (party.id === id) {\n        delete parties[id - 1];\n        res.status(200).send({\n          status: 200,\n          data: [{\n            message: `Party with id: ${id} deleted successfully`,\n          }],\n        });\n      }\n    });\n    res.status(404).send({\n      status: 404,\n      error: 'Party does not exist or has already been deleted',\n    });\n  }\n}\n\nconst partyController = new PartyController();\n\nexport default partyController;\n"]}