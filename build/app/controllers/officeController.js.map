{"version":3,"sources":["../../../server/app/controllers/officeController.js"],"names":["OfficeController","req","res","body","type","status","send","error","name","office","id","offices","length","push","parseInt","params","forEach","officeController"],"mappings":";;;;;;qjBAAA;;;AACA;;;;;;;;IAEMA,gB;;;;;;;8BACMC,G,EAAKC,G,EAAK;AAClB,UAAI,CAACD,IAAIE,IAAJ,CAASC,IAAd,EAAoB;AAClBF,YAAIG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,kBAAQ,GADW;AAEnBE,iBAAO;AAFY,SAArB;AAID,OALD,MAKO,IAAI,CAACN,IAAIE,IAAJ,CAASK,IAAd,EAAoB;AACzBN,YAAIG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,kBAAQ,GADW;AAEnBE,iBAAO;AAFY,SAArB;AAID,OALM,MAKA;AACL,YAAME,SAAS;AACbC,cAAIC,kBAAQC,MAAR,GAAiB,CADR;AAEbR,gBAAMH,IAAIE,IAAJ,CAASC,IAFF;AAGbI,gBAAMP,IAAIE,IAAJ,CAASK;AAHF,SAAf;AAKAG,0BAAQE,IAAR,CAAaJ,MAAb;;AAEAP,YAAIG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,kBAAQ,GADW;AAEnBI;AAFmB,SAArB;AAID;AACF;;;kCAEaR,G,EAAKC,G,EAAK;AACtBA,UAAIG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,gBAAQ,GADW;AAEnBM;AAFmB,OAArB;AAID;;;iCAEYV,G,EAAKC,G,EAAK;AACrB,UAAMQ,KAAKI,SAASb,IAAIc,MAAJ,CAAWL,EAApB,EAAwB,EAAxB,CAAX;AACAC,wBAAQK,OAAR,CAAgB,UAACP,MAAD,EAAY;AAC1B,YAAIA,OAAOC,EAAP,KAAcA,EAAlB,EAAsB;AACpBR,cAAIG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,oBAAQ,GADW;AAEnBI;AAFmB,WAArB;AAID;AACF,OAPD;AAQAP,UAAIG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,gBAAQ,GADW;AAEnBE,eAAO;AAFY,OAArB;AAID;;;;;;AAGH,IAAMU,mBAAmB,IAAIjB,gBAAJ,EAAzB;;kBAEeiB,gB","file":"officeController.js","sourcesContent":["/* eslint-disable class-methods-use-this */\nimport offices from '../model/offices';\n\nclass OfficeController {\n  addOffice(req, res) {\n    if (!req.body.type) {\n      res.status(400).send({\n        status: 400,\n        error: 'Define office type',\n      });\n    } else if (!req.body.name) {\n      res.status(400).send({\n        status: 400,\n        error: 'Office name is required',\n      });\n    } else {\n      const office = {\n        id: offices.length + 1,\n        type: req.body.type,\n        name: req.body.name,\n      };\n      offices.push(office);\n\n      res.status(201).send({\n        status: 201,\n        office,\n      });\n    }\n  }\n\n  getAllOffices(req, res) {\n    res.status(200).send({\n      status: 200,\n      offices,\n    });\n  }\n\n  getOneOffice(req, res) {\n    const id = parseInt(req.params.id, 10);\n    offices.forEach((office) => {\n      if (office.id === id) {\n        res.status(200).send({\n          status: 200,\n          office,\n        });\n      }\n    });\n    res.status(404).send({\n      status: 404,\n      error: 'Resource not found',\n    });\n  }\n}\n\nconst officeController = new OfficeController();\n\nexport default officeController;\n"]}